// <auto-generated />
using System;
using EducationalService.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EducationalService.API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230509124120_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EducationalService.API.Models.GroupAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GroupAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a62a6b8f-6ca8-467e-a10a-30d4724122de"),
                            CreatedAt = new DateTime(2023, 5, 9, 12, 41, 20, 728, DateTimeKind.Utc).AddTicks(316),
                            IsDeleted = false,
                            Name = "Group1"
                        },
                        new
                        {
                            Id = new Guid("a62a6b8f-6ca8-467e-a11a-30d4724122df"),
                            CreatedAt = new DateTime(2023, 5, 9, 12, 41, 20, 728, DateTimeKind.Utc).AddTicks(328),
                            IsDeleted = false,
                            Name = "Group2"
                        });
                });

            modelBuilder.Entity("EducationalService.API.Models.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GroupAccountId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupAccountId");

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a61a6b8f-6ca8-467e-a10a-30d4724122de"),
                            CreatedAt = new DateTime(2023, 5, 9, 12, 41, 20, 728, DateTimeKind.Utc).AddTicks(418),
                            GroupAccountId = new Guid("a62a6b8f-6ca8-467e-a10a-30d4724122de"),
                            IsDeleted = false,
                            UserId = "SampleId",
                            UserPassword = "Password"
                        });
                });

            modelBuilder.Entity("EducationalService.API.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GroupAccountId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("EducationalService.API.Models.UserAccount", b =>
                {
                    b.HasOne("EducationalService.API.Models.GroupAccount", "GroupAccount")
                        .WithMany("UserAccounts")
                        .HasForeignKey("GroupAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupAccount");
                });

            modelBuilder.Entity("EducationalService.API.Models.GroupAccount", b =>
                {
                    b.Navigation("UserAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
